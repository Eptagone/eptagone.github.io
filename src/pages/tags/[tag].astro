---
/**
 * Name: pages/tags/[tag].astro
 * Description: This file defines the template for the tag page.
 */

import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Layout from "@layouts/BaseLayout.astro";
import PostCard from "@components/PostCard.astro";
import { createUri } from "@shared/utilities";

interface GroupedPost {
    tag: string;
    posts: {
        title: string;
        description: string;
        publishDate: Date;
        link: string;
        image: ImageMetadata;
    }[];
}

export const getStaticPaths = (async () => {
    const blog = await getCollection("blog");
    const groups = blog
        .sort((a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime())
        .reduce<GroupedPost[]>((acc, post) => {
            post.data.tags.forEach((tag) => {
                const group = acc.find((p) => p.tag === tag);
                const summary = {
                    ...post.data,
                    link: `blog/${post.slug}`,
                };
                if (group) {
                    group.posts.push(summary);
                } else {
                    acc.push({
                        tag,
                        posts: [summary],
                    });
                }
            });
            return acc;
        }, []);
    return groups.map((g) => ({
        params: { tag: createUri(g.tag) },
        props: { posts: g.posts },
    }));
}) satisfies GetStaticPaths;

const { tag } = Astro.params;
const { posts } = Astro.props;
const title = `Posts tagged with ${tag}`;
const description = `Posts tagged with ${tag}`;
---

<Layout title={title} description={description}>
    <div class="flex w-full flex-col">
        <section class="mx-auto max-w-5xl p-6">
            <h1 class="mb-4 text-3xl font-semibold">{title}</h1>
            <ul class="mb-4 flex flex-col gap-4 md:flex-row">
                {
                    posts.map((post) => (
                        <li class="md:basis md:basis-1/3">
                            <PostCard link={post.link} title={post.title} description={post.description} publishDate={post.publishDate} image={post.image} />
                        </li>
                    ))
                }
            </ul>
        </section>
    </div>
</Layout>
